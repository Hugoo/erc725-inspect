{"version":3,"sources":["hooks/useWeb3.ts","globals.ts","utils/web3.ts","compoonents/DataKeysTable.tsx","utils/erc725y.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useWeb3","useState","web3Info","setWeb3Info","useEffect","getWeb3","a","web3","Web3","then","getDataMultiple","address","keys","Contract","eth","type","stateMutability","outputs","name","internalType","inputs","dataMultiple","methods","call","console","log","message","checkInterface","isErc725X","supportsInterface","isErc725Y","getAllDataKeys","allDataKeys","DataKeysTable","data","setData","fetch","fetchedDataKeys","fetchedDataValues","map","fetchedDataKey","i","key","value","keyInfo","keyType","valueContent","valueType","indexOf","substr","explainErc725YKey","className","App","setAddress","isLoading","setIsLoading","setIsErc725X","setIsErc725Y","errorMessage","setErrorMessage","check","isAddress","supportStandards","placeholder","onChange","e","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22d298c9.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport Web3 from 'web3';\n\nimport { RPC_URL } from '../globals';\n\nexport default function useWeb3() {\n  const [web3Info, setWeb3Info] = useState<Web3>();\n\n  useEffect(() => {\n    const getWeb3 = async () => {\n      const web3 = new Web3(RPC_URL);\n      return web3;\n    };\n\n    getWeb3().then((web3) => {\n      setWeb3Info(web3);\n      if (process.env.NODE_ENV === 'development') {\n        // @ts-ignore\n        window.web3 = web3;\n      }\n    });\n  }, []);\n\n  return web3Info;\n}\n","export const RPC_URL = 'https://rpc.l14.lukso.network';\n","import Web3 from 'web3';\n\nexport const getDataMultiple = async (\n  address: string,\n  keys: string[],\n  web3: Web3,\n) => {\n  const Contract = new web3.eth.Contract(\n    [\n      {\n        type: 'function',\n        stateMutability: 'view',\n        outputs: [\n          {\n            type: 'bytes[]',\n            name: '',\n            internalType: 'bytes[]',\n          },\n        ],\n        name: 'getDataMultiple',\n        inputs: [\n          {\n            type: 'bytes32[]',\n            name: '_keys',\n            internalType: 'bytes32[]',\n          },\n        ],\n      },\n    ],\n    address,\n  );\n\n  let dataMultiple = [];\n  try {\n    dataMultiple = await Contract.methods.getDataMultiple(keys).call();\n  } catch (err: any) {\n    console.log(err.message);\n  }\n\n  return dataMultiple;\n};\n\nexport const checkInterface = async (address: string, web3: Web3) => {\n  const Contract = new web3.eth.Contract(\n    [\n      {\n        type: 'function',\n        stateMutability: 'view',\n        outputs: [\n          {\n            type: 'bool',\n            name: '',\n            internalType: 'bool',\n          },\n        ],\n        name: 'supportsInterface',\n        inputs: [\n          {\n            type: 'bytes4',\n            name: 'interfaceId',\n            internalType: 'bytes4',\n          },\n        ],\n      },\n    ],\n    address,\n  );\n\n  let isErc725X = false;\n  try {\n    isErc725X = await Contract.methods.supportsInterface('0x44c028fe').call();\n  } catch (err: any) {\n    console.log(err.message);\n  }\n\n  let isErc725Y = false;\n  try {\n    isErc725Y = await Contract.methods.supportsInterface('0x2bd57b73').call();\n  } catch (err: any) {\n    console.log(err.message);\n  }\n\n  return {\n    isErc725X,\n    isErc725Y,\n  };\n};\n\nexport const getAllDataKeys = async (\n  address: string,\n  web3: Web3,\n): Promise<string[]> => {\n  const Contract = new web3.eth.Contract(\n    [\n      {\n        type: 'function',\n        stateMutability: 'view',\n        outputs: [\n          {\n            type: 'bytes32[]',\n            name: '',\n            internalType: 'bytes32[]',\n          },\n        ],\n        name: 'allDataKeys',\n        inputs: [],\n      },\n    ],\n    address,\n  );\n\n  let allDataKeys = [];\n  try {\n    allDataKeys = await Contract.methods.allDataKeys().call();\n  } catch (err: any) {\n    console.log(err.message);\n  }\n\n  return allDataKeys;\n};\n","import React, { useEffect, useState } from 'react';\nimport useWeb3 from '../hooks/useWeb3';\nimport { getAllDataKeys, getDataMultiple } from '../utils/web3';\nimport { explainErc725YKey } from '../utils/erc725y';\n\ninterface Props {\n  address: string;\n  isErc725Y: boolean;\n}\n\nconst DataKeysTable: React.FC<Props> = ({ address, isErc725Y }) => {\n  const [data, setData] = useState<{ key: string; value: string }[]>([]);\n\n  const web3 = useWeb3();\n\n  useEffect(() => {\n    const fetch = async () => {\n      if (!web3 || !isErc725Y) {\n        return;\n      }\n\n      try {\n        const fetchedDataKeys = await getAllDataKeys(address, web3);\n        const fetchedDataValues = await getDataMultiple(\n          address,\n          fetchedDataKeys,\n          web3,\n        );\n\n        setData(\n          fetchedDataKeys.map((fetchedDataKey, i) => {\n            return {\n              key: fetchedDataKey,\n              value: fetchedDataValues[i],\n            };\n          }),\n        );\n      } catch (err) {\n        setData([]);\n      }\n    };\n\n    fetch();\n  }, [address, web3, isErc725Y]);\n\n  if (!isErc725Y) {\n    return <div>This address does not support ERC725Y</div>;\n  }\n\n  return (\n    <div>\n      {data.map((data) => {\n        const keyInfo = explainErc725YKey(data.key);\n\n        return (\n          <div key={data.key} className=\"py-5\">\n            <h4 className=\"title is-4\">{keyInfo.name}</h4>\n            <ul>\n              <li>\n                <span className=\"tag is-link is-light\">{keyInfo.keyType}</span>\n              </li>\n              <li>\n                <code>{keyInfo.key}</code>\n              </li>\n              <li>\n                Raw value: <code>{data.value}</code>\n              </li>\n              <li>Decoded value: TODO</li>\n            </ul>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default DataKeysTable;\n","import { ERC725JSONSchema } from '@erc725/erc725.js';\n\n// Used to put UNKNOWN and to deal with missing types in erc725.js\ninterface Erc725JsonSchemaAll {\n  name: string;\n  key: string;\n  keyType: string;\n  valueContent: string;\n  valueType: string;\n}\n\nexport const explainErc725YKey = (\n  key: string,\n): ERC725JSONSchema | Erc725JsonSchemaAll => {\n  switch (key) {\n    case '0xeafec4d89fa9619884b6b89135626455000000000000000000000000abe425d6':\n      return {\n        name: 'SupportedStandards:LSP3UniversalProfile',\n        key: '0xeafec4d89fa9619884b6b89135626455000000000000000000000000abe425d6',\n        keyType: 'Mapping',\n        valueContent: '0xabe425d6',\n        valueType: 'bytes',\n      };\n    case '0xeafec4d89fa9619884b6b89135626455000000000000000000000000afdeb5d6':\n      return {\n        name: 'SupportedStandards:ERC725Account',\n        key: '0xeafec4d89fa9619884b6b89135626455000000000000000000000000afdeb5d6',\n        keyType: 'Singleton',\n        valueContent: '0xafdeb5d6',\n        valueType: 'bytes',\n      };\n    case '0x3a47ab5bd3a594c3a8995f8fa58d0876c96819ca4516bd76100c92462f2f9dc0':\n      return {\n        name: 'LSP3IssuedAssets[]',\n        key: '0x3a47ab5bd3a594c3a8995f8fa58d0876c96819ca4516bd76100c92462f2f9dc0',\n        keyType: 'Array',\n        valueContent: 'Address',\n        valueType: 'address',\n      };\n    case '0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47':\n      return {\n        name: 'LSP1UniversalReceiverDelegate',\n        key: '0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47',\n        keyType: 'Singleton',\n        valueContent: 'Address',\n        valueType: 'address',\n      };\n    case '0x5ef83ad9559033e6e941db7d7c495acdce616347d28e90c7ce47cbfcfcad3bc5':\n      return {\n        name: 'LSP3Profile',\n        key: '0x5ef83ad9559033e6e941db7d7c495acdce616347d28e90c7ce47cbfcfcad3bc5',\n        keyType: 'Singleton',\n        valueContent: 'JSONURL',\n        valueType: 'bytes',\n      };\n\n    default:\n      break;\n  }\n\n  // If it is not a known key, let's try to decode it\n\n  if (\n    key.indexOf(\n      '0xeafec4d89fa9619884b6b89135626455000000000000000000000000',\n    ) !== -1\n  ) {\n    return {\n      name: 'SupportedStandards:?????????',\n      key,\n      keyType: 'Mapping',\n      valueContent: key.substr(58),\n      valueType: 'bytes',\n    };\n  }\n\n  if (key.indexOf('0x4b80742d0000000082ac0000') !== -1) {\n    const address = key.substr(26);\n\n    return {\n      name: `AddressPermissions:Permissions:${address}`,\n      key,\n      keyType: 'AddressMappingWithGrouping',\n      valueContent: 'BitArray',\n      valueType: 'bytes4',\n    };\n  }\n\n  return {\n    name: 'UNKNOWN',\n    key,\n    keyType: 'UNKNOWN',\n    valueContent: 'UNKNOWN',\n    valueType: 'UNKNOWN',\n  };\n\n  /*\n    Singleton: A simple key.\nArray: An array spanning multiple ERC725Y keys.\nMapping: A key that maps two words.\nAddressMapping: A key that maps a word to an address.\nAddressMappingWithGrouping\n\n*/\n};\n","import React, { useEffect, useState } from 'react';\nimport { isAddress } from 'web3-utils';\n\nimport './App.css';\nimport useWeb3 from './hooks/useWeb3';\nimport { checkInterface } from './utils/web3';\n\nimport DataKeysTable from './compoonents/DataKeysTable';\n\nconst App = () => {\n  const [address, setAddress] = useState(\n    '0xb8E120e7e5EAe7bfA629Db5CEFfA69C834F74e99',\n  );\n  const [isLoading, setIsLoading] = useState(false);\n  const [isErc725X, setIsErc725X] = useState(false);\n  const [isErc725Y, setIsErc725Y] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const web3 = useWeb3();\n\n  useEffect(() => {\n    const check = async () => {\n      if (!web3) {\n        return;\n      }\n\n      setIsErc725X(false);\n      setIsErc725Y(false);\n\n      if (!isAddress(address)) {\n        setErrorMessage('Address is not valid');\n        return;\n      }\n\n      setIsLoading(true);\n      const supportStandards = await checkInterface(address, web3);\n\n      setIsErc725X(supportStandards.isErc725X);\n      setIsErc725Y(supportStandards.isErc725Y);\n      setIsLoading(false);\n    };\n    check();\n  }, [address, web3]);\n\n  return (\n    <section className=\"section\">\n      <div className=\"container is-fluid\">\n        <div className=\"field\">\n          <label className=\"label\">Contract Address</label>\n          <div className=\"control has-icons-left has-icons-right\">\n            <input\n              className={`input ${\n                errorMessage === '' ? 'is-success' : 'is-danger'\n              }`}\n              type=\"text\"\n              placeholder=\"ERC725 Contract Address\"\n              value={address}\n              onChange={(e) => {\n                setAddress(e.target.value);\n              }}\n            />\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\"></i>\n            </span>\n            <span className=\"icon is-small is-right\">\n              <i className=\"fas fa-check\"></i>\n            </span>\n          </div>\n          {errorMessage && <p className=\"help is-danger\">{errorMessage}</p>}\n        </div>\n      </div>\n      <div className=\"container is-fluid\">\n        {isLoading ? (\n          'Loading...'\n        ) : (\n          <div>\n            <ul>\n              <li>ERC725X: {isErc725X ? '✅' : '❌'}</li>\n              <li>ERC725Y: {isErc725Y ? '✅' : '❌'}</li>\n            </ul>\n\n            <DataKeysTable address={address} isErc725Y={isErc725Y} />\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}