{"version":3,"sources":["hooks/useWeb3.ts","globals.ts","utils/web3.ts","components/AddressButtons/AddressButtons.tsx","components/ValueTypeDecoder/ValueTypeDecoder.tsx","components/DataKeysTable/DataKeysTable.tsx","utils/erc725y.ts","components/Header/Header.tsx","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useWeb3","useState","web3Info","setWeb3Info","useEffect","getWeb3","a","web3","Web3","then","getDataMultiple","address","keys","Contract","eth","type","stateMutability","outputs","name","internalType","inputs","dataMultiple","methods","call","console","log","message","Promise","all","map","key","getData","data","checkInterface","isErc725X","supportsInterface","isErc725Y","getAllDataKeys","allDataKeys","AddressButtons","className","target","rel","href","window","location","ValueTypeDecoder","erc725JSONSchema","value","valueContent","decodedDataOneKey","schema","erc725","ERC725","decodeData","err","JSON","stringify","url","DataKeysTable","setData","fetch","fetchedDataKeys","fetchedDataValues","fetchedDataKey","i","keyInfo","keyType","valueType","elementValueContent","elementValueType","indexOf","substr","itemNumber","parseInt","explainErc725YKey","split","pop","Header","Home","query","URLSearchParams","useLocation","search","get","setAddress","isLoading","setIsLoading","setIsErc725X","setIsErc725Y","shareButtonTitle","setShareButtonTitle","errorMessage","setErrorMessage","check","isAddress","supportStandards","placeholder","onChange","e","disabled","onClick","navigator","clipboard","writeText","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ijBAKe,SAASA,IACtB,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KAiBA,OAfAC,qBAAU,WACR,IAAMC,EAAO,uCAAG,4BAAAC,EAAA,6DACRC,EAAO,IAAIC,ICVA,iCDSH,kBAEPD,GAFO,2CAAH,qDAKbF,IAAUI,MAAK,SAACF,GACdJ,EAAYI,QAMb,IAEIL,EErBF,IAAMQ,EAAe,uCAAG,WAC7BC,EACAC,EACAL,GAH6B,iBAAAD,EAAA,6DAKvBO,EAAW,IAAIN,EAAKO,IAAID,SAC5B,CACE,CACEE,KAAM,WACNC,gBAAiB,OACjBC,QAAS,CACP,CACEF,KAAM,UACNG,KAAM,GACNC,aAAc,YAGlBD,KAAM,kBACNE,OAAQ,CACN,CACEL,KAAM,YACNG,KAAM,QACNC,aAAc,gBAKtBR,GAGEU,EAAyB,GA9BA,kBAgCNR,EAASS,QAAQZ,gBAAgBE,GAAMW,OAhCjC,OAgC3BF,EAhC2B,8DAkC3BG,QAAQC,IAAI,KAAIC,SAEhBF,QAAQC,IAAI,sDApCe,UAqCNE,QAAQC,IAC3BhB,EAAKiB,KAAI,SAACC,GAAD,OAASC,EAAQpB,EAASJ,EAAMuB,OAtChB,QAqC3BT,EArC2B,wCA0CtBA,GA1CsB,yDAAH,0DA6CfU,EAAO,uCAAG,WAAOpB,EAAiBJ,EAAYuB,GAApC,iBAAAxB,EAAA,6DACfO,EAAW,IAAIN,EAAKO,IAAID,SAC5B,CACE,CACEE,KAAM,WACNC,gBAAiB,OACjBC,QAAS,CACP,CACEF,KAAM,QACNG,KAAM,SACNC,aAAc,UAGlBD,KAAM,UACNE,OAAQ,CACN,CACEL,KAAM,UACNG,KAAM,OACNC,aAAc,cAKtBR,GAvBmB,kBA4BNE,EAASS,QAAQS,QAAQD,GAAKP,OA5BxB,OA4BnBS,EA5BmB,uDA8BnBR,QAAQC,IAAI,KAAIC,SA9BG,iCAiCdM,GAjCc,yDAAH,0DAoCPC,EAAc,uCAAG,WAAOtB,EAAiBJ,GAAxB,mBAAAD,EAAA,6DACtBO,EAAW,IAAIN,EAAKO,IAAID,SAC5B,CACE,CACEE,KAAM,WACNC,gBAAiB,OACjBC,QAAS,CACP,CACEF,KAAM,OACNG,KAAM,GACNC,aAAc,SAGlBD,KAAM,oBACNE,OAAQ,CACN,CACEL,KAAM,SACNG,KAAM,cACNC,aAAc,aAKtBR,GAGEuB,GAAY,EA1BY,kBA4BRrB,EAASS,QAAQa,kBAAkB,cAAcZ,OA5BzC,OA4B1BW,EA5B0B,uDA8B1BV,QAAQC,IAAI,KAAIC,SA9BU,eAiCxBU,GAAY,EAjCY,oBAmCRvB,EAASS,QAAQa,kBAAkB,cAAcZ,OAnCzC,QAmC1Ba,EAnC0B,0DAqC1BZ,QAAQC,IAAI,KAAIC,SArCU,iCAwCrB,CACLQ,YACAE,cA1C0B,iEAAH,wDA8CdC,EAAc,uCAAG,WAC5B1B,EACAJ,GAF4B,iBAAAD,EAAA,6DAItBO,EAAW,IAAIN,EAAKO,IAAID,SAC5B,CACE,CACEE,KAAM,WACNC,gBAAiB,OACjBC,QAAS,CACP,CACEF,KAAM,YACNG,KAAM,GACNC,aAAc,cAGlBD,KAAM,cACNE,OAAQ,KAGZT,GAGE2B,EAAc,GAvBU,kBAyBNzB,EAASS,QAAQgB,cAAcf,OAzBzB,OAyB1Be,EAzB0B,uDA2B1Bd,QAAQC,IAAI,KAAIC,SA3BU,iCA8BrBY,GA9BqB,yDAAH,wD,OCtFZC,EArCyB,SAAC,GAAiB,IAAf5B,EAAc,EAAdA,QACzC,OACE,sBAAK6B,UAAU,yBAAf,UACE,mBACEA,UAAU,6BACVC,OAAO,SACPC,IAAI,aACJC,KAAI,yCAAoChC,GAJ1C,kEAQA,mBACE6B,UAAU,0BACVC,OAAO,SACPC,IAAI,aACJC,KAAI,+CAA0ChC,GAJhD,8CAQA,mBACE6B,UAAU,0BACVC,OAAO,SACPC,IAAI,aACJC,KAAI,mDAA8ChC,GAJpD,uCAQA,mBACE6B,UAAU,0BACVG,KAAI,UAAKC,OAAOC,SAAZ,oBAAgClC,GAFtC,6C,iBCeSmC,EAtC2B,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,iBAAkBC,EAAY,EAAZA,MAC7D,GAAsC,YAAlCD,EAAiBE,aACnB,OACE,qCACE,+BAAOD,IACP,cAAC,EAAD,CAAgBrC,QAASqC,OAO/B,IAIIE,EAJEC,EAA6B,CAACJ,GAE9BK,EAAS,IAAIC,IAAOF,GAG1B,IACED,EAAoBE,EAAOE,WAAP,eACjBP,EAAiB7B,KAAO8B,IAE3B,MAAOO,GAEP,OAAO,yDAKT,OAFA/B,QAAQC,IAAIyB,GAGV,gCACE,8BAAMM,KAAKC,UAAUP,EAAmB,KAAM,KAC7CA,EAAkBH,EAAiB7B,MAAMwC,KACxC,yCAAYR,EAAkBH,EAAiB7B,MAAMwC,WC8D9CC,EA3FwB,SAAC,GAA4B,IAA1BhD,EAAyB,EAAzBA,QAASyB,EAAgB,EAAhBA,UACjD,EAAwBnC,mBAA2C,IAAnE,mBAAO+B,EAAP,KAAa4B,EAAb,KAEMrD,EAAOP,IAgCb,OA9BAI,qBAAU,WACR,IAAMyD,EAAK,uCAAG,8BAAAvD,EAAA,yDACPC,GAAS6B,EADF,0EAMoBC,EAAe1B,EAASJ,GAN5C,cAMJuD,EANI,gBAOsBpD,EAC9BC,EACAmD,EACAvD,GAVQ,OAOJwD,EAPI,OAaVH,EACEE,EAAgBjC,KAAI,SAACmC,EAAgBC,GACnC,MAAO,CACLnC,IAAKkC,EACLhB,MAAOe,EAAkBE,QAjBrB,kDAsBVL,EAAQ,IAtBE,0DAAH,qDA0BXC,MACC,CAAClD,EAASJ,EAAM6B,IAEdA,EAKH,qBAAKI,UAAU,uBAAf,SACGR,EAAKH,KAAI,SAACG,GACT,IAAMkC,ECpDmB,SAC/BpC,GAEA,OAAQA,GAEN,IAAK,qEACH,MAAO,CACLZ,KAAM,4CACNY,IAAK,qEACLqC,QAAS,UACTlB,aAAc,aACdmB,UAAW,SAGf,IAAK,qEACH,MAAO,CACLlD,KAAM,eACNY,IAAK,qEACLqC,QAAS,YACTlB,aAAc,UACdmB,UAAW,SAGf,IAAK,qEACH,MAAO,CACLlD,KAAM,iBACNY,IAAK,qEACLqC,QAAS,QACTlB,aAAc,SACdmB,UAAW,UACXC,oBAAqB,UACrBC,iBAAkB,WAItB,IAAK,qEACH,MAAO,CACLpD,KAAM,0CACNY,IAAK,qEACLqC,QAAS,UACTlB,aAAc,aACdmB,UAAW,SAGf,IAAK,qEACH,MAAO,CACLlD,KAAM,qBACNY,IAAK,qEACLqC,QAAS,QACTlB,aAAc,UACdmB,UAAW,WAEf,IAAK,qEACH,MAAO,CACLlD,KAAM,mCACNY,IAAK,qEACLqC,QAAS,YACTlB,aAAc,aACdmB,UAAW,SAEf,IAAK,qEACH,MAAO,CACLlD,KAAM,gCACNY,IAAK,qEACLqC,QAAS,YACTlB,aAAc,UACdmB,UAAW,WAEf,IAAK,qEACH,MAAO,CACLlD,KAAM,cACNY,IAAK,qEACLqC,QAAS,YACTlB,aAAc,UACdmB,UAAW,SAEf,IAAK,qEACH,MAAO,CACLlD,KAAM,uBACNY,IAAK,qEACLqC,QAAS,QACTlB,aAAc,UACdmB,UAAW,WAQjB,IAGS,IAFPtC,EAAIyC,QACF,8DAGF,MAAO,CACLrD,KAAM,+BACNY,MACAqC,QAAS,UACTlB,aAAcnB,EAAI0C,OAAO,IACzBJ,UAAW,SAKf,IAAmD,IAA/CtC,EAAIyC,QAAQ,8BAAsC,CACpD,IAAM5D,EAAUmB,EAAI0C,OAAO,IAE3B,MAAO,CACLtD,KAAK,kCAAD,OAAoCP,GACxCmB,MACAqC,QAAS,6BACTlB,aAAc,WACdmB,UAAW,UAGf,IAAmD,IAA/CtC,EAAIyC,QAAQ,8BAAsC,CACpD,IAAM5D,EAAUmB,EAAI0C,OAAO,IAE3B,MAAO,CACLtD,KAAK,uCAAD,OAAyCP,GAC7CmB,MACAqC,QAAS,6BACTlB,aAAc,UACdmB,UAAW,aAGf,IAAmD,IAA/CtC,EAAIyC,QAAQ,8BAAsC,CACpD,IAAM5D,EAAUmB,EAAI0C,OAAO,IAE3B,MAAO,CACLtD,KAAK,uCAAD,OAAyCP,GAC7CmB,MACAqC,QAAS,6BACTlB,aAAc,SACdmB,UAAW,YAGf,IAAmD,IAA/CtC,EAAIyC,QAAQ,8BAAsC,CACpD,IAAM5D,EAAUmB,EAAI0C,OAAO,IAE3B,MAAO,CACLtD,KAAK,uCAAD,OAAyCP,GAC7CmB,MACAqC,QAAS,6BACTlB,aAAc,SACdmB,UAAW,YAIf,IAA2D,IAAvDtC,EAAIyC,QAAQ,sCAA8C,CAC5D,IAAME,EAAaC,SAAS5C,EAAI0C,OAAO,IAAK,IAE5C,MAAO,CACLtD,KAAK,gBAAD,OAAkBuD,EAAlB,KACJ3C,IAAKA,EACLqC,QAAS,YACTlB,aAAc,UACdmB,UAAW,WAIf,IAA2D,IAAvDtC,EAAIyC,QAAQ,sCAA8C,CAC5D,IAAME,EAAaC,SAAS5C,EAAI0C,OAAO,IAAK,IAE5C,MAAO,CACLtD,KAAK,oBAAD,OAAsBuD,EAAtB,KACJ3C,IAAKA,EACLqC,QAAS,YACTlB,aAAc,UACdmB,UAAW,WAIf,MAAO,CACLlD,KAAM,UACNY,MACAqC,QAAS,UACTlB,aAAc,UACdmB,UAAW,WD/HSO,CAAkB3C,EAAKF,KAEvC,OACE,qBAAKU,UAAU,iBAAf,SACE,sBAAoBA,UAAU,eAA9B,UACE,qBAAIA,UAAU,aAAd,UACG0B,EAAQhD,KAAM,IACf,sBAAMsB,UAAU,uBAAhB,SAAwC0B,EAAQC,aAElD,+BACE,uCACO,+BAAOD,EAAQpC,SAEtB,2CACY,IACV,sBAAMU,UAAU,uBAAhB,SACG0B,EAAQE,YAHb,KAKI,+BAAOpC,EAAKgB,WAEhB,+CACgB,IACd,sBAAMR,UAAU,uBAAhB,SACG0B,EAAQjB,eAHb,IAKI,IACF,cAAC,EAAD,CACEF,iBAAkBmB,EAClBlB,MAAOhB,EAAKgB,WAGK,+BAApBkB,EAAQC,SACP,iDACkB,IAChB,sCAASD,EAAQhD,KAAK0D,MAAM,KAAKC,SAAc,IAC/C,cAAC,EAAD,CACElE,QAAO,YAAOuD,EAAQhD,KAAK0D,MAAM,KAAKC,iBAhCtC7C,EAAKF,YAVhB,MEIIgD,EAnDU,WACvB,OACE,qBAAKtC,UAAU,kBAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,mBAAGA,UAAU,cAAcG,KAAK,IAAhC,uDAKF,sBAAKH,UAAU,aAAf,UACE,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,UAAf,SACE,mBACEG,KAAK,yDACLH,UAAU,kBAFZ,2BASJ,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,UAAf,SACE,mBACEG,KAAK,+CACLH,UAAU,kBAFZ,oCASJ,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,mBAAGA,UAAU,UAAb,SACE,mBACEA,UAAU,oBACVG,KAAK,2CAFP,SAIE,2DC3BlB,IAyGeoC,EAzGF,WACX,IAAMC,EAJC,IAAIC,gBAAgBC,cAAcC,QAMzC,EAA8BlF,mBAC5B+E,EAAMI,IAAI,YAAc,8CAD1B,mBAAOzE,EAAP,KAAgB0E,EAAhB,KAGA,EAAkCpF,oBAAS,GAA3C,mBAAOqF,EAAP,KAAkBC,EAAlB,KACA,EAAkCtF,oBAAS,GAA3C,mBAAOiC,EAAP,KAAkBsD,EAAlB,KACA,EAAkCvF,oBAAS,GAA3C,mBAAOmC,EAAP,KAAkBqD,EAAlB,KACA,EAAgDxF,mBAAS,mBAAzD,mBAAOyF,EAAP,KAAyBC,EAAzB,KACA,EAAwC1F,mBAAS,IAAjD,mBAAO2F,EAAP,KAAqBC,EAArB,KAEMtF,EAAOP,IA2Bb,OAzBAI,qBAAU,WACR,IAAM0F,EAAK,uCAAG,4BAAAxF,EAAA,yDACPC,EADO,oDAKZiF,GAAa,GACbC,GAAa,GACbI,EAAgB,IAEXE,oBAAUpF,GATH,uBAUVkF,EAAgB,wBAVN,iCAcZN,GAAa,GAdD,UAemBtD,EAAetB,EAASJ,GAf3C,QAeNyF,EAfM,OAiBZR,EAAaQ,EAAiB9D,WAC9BuD,EAAaO,EAAiB5D,WAC9BmD,GAAa,GAnBD,4CAAH,qDAqBXO,MACC,CAACnF,EAASJ,IAGX,qCACE,cAAC,EAAD,IACA,0BAASiC,UAAU,UAAnB,UACE,qBAAKA,UAAU,qBAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,sBAAKA,UAAU,yDAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAS,kBAAa8C,GAAa,cAAxC,SACE,uBACE9C,UAAS,uDACU,KAAjBoD,IAAwB1D,GAAaE,GACjC,aACA,aAENrB,KAAK,OACLkF,YAAY,0BACZjD,MAAOrC,EACPuF,SAAU,SAACC,GACTd,EAAWc,EAAE1D,OAAOO,YAIzB4C,GACC,mBAAGpD,UAAU,iBAAb,SAA+BoD,KAE/BA,IAAiB1D,IAAcE,GAC/B,mBAAGI,UAAU,iBAAb,gDAGAN,GAAaE,IACb,oBAAGI,UAAU,kBAAb,sBACYN,EAAY,SAAM,SAD9B,cAC8C,IAC3CE,EAAY,SAAM,eAIzB,qBAAKI,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,wBACE4D,WAAYR,EACZpD,UAAU,oBACV6D,QAAS,WACPC,UAAUC,UAAUC,UAApB,UACK5D,OAAOC,SADZ,oBACgClC,IAEhCgF,EAAoB,gCAPxB,SAUGD,eAOb,qBAAKlD,UAAU,qBAAf,UACI8C,GACA,cAAC,EAAD,CAAe3E,QAASA,EAASyB,UAAWA,aClGzCqE,EARH,WACV,OACE,cAAC,IAAD,UACE,cAAC,EAAD,OCKSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBnG,MAAK,YAAkD,IAA/CoG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.379ac984.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport Web3 from 'web3';\n\nimport { RPC_URL } from '../globals';\n\nexport default function useWeb3() {\n  const [web3Info, setWeb3Info] = useState<Web3>();\n\n  useEffect(() => {\n    const getWeb3 = async () => {\n      const web3 = new Web3(RPC_URL);\n      return web3;\n    };\n\n    getWeb3().then((web3) => {\n      setWeb3Info(web3);\n      if (process.env.NODE_ENV === 'development') {\n        // @ts-ignore\n        window.web3 = web3;\n      }\n    });\n  }, []);\n\n  return web3Info;\n}\n","export const RPC_URL = 'https://rpc.l14.lukso.network';\n","import Web3 from 'web3';\n\nexport const getDataMultiple = async (\n  address: string,\n  keys: string[],\n  web3: Web3,\n) => {\n  const Contract = new web3.eth.Contract(\n    [\n      {\n        type: 'function',\n        stateMutability: 'view',\n        outputs: [\n          {\n            type: 'bytes[]',\n            name: '',\n            internalType: 'bytes[]',\n          },\n        ],\n        name: 'getDataMultiple',\n        inputs: [\n          {\n            type: 'bytes32[]',\n            name: '_keys',\n            internalType: 'bytes32[]',\n          },\n        ],\n      },\n    ],\n    address,\n  );\n\n  let dataMultiple: string[] = [];\n  try {\n    dataMultiple = await Contract.methods.getDataMultiple(keys).call();\n  } catch (err: any) {\n    console.log(err.message);\n\n    console.log('getDataMultiple not working, fetching with getData');\n    dataMultiple = await Promise.all(\n      keys.map((key) => getData(address, web3, key)),\n    );\n  }\n\n  return dataMultiple;\n};\n\nexport const getData = async (address: string, web3: Web3, key: string) => {\n  const Contract = new web3.eth.Contract(\n    [\n      {\n        type: 'function',\n        stateMutability: 'view',\n        outputs: [\n          {\n            type: 'bytes',\n            name: '_value',\n            internalType: 'bytes',\n          },\n        ],\n        name: 'getData',\n        inputs: [\n          {\n            type: 'bytes32',\n            name: '_key',\n            internalType: 'bytes32',\n          },\n        ],\n      },\n    ],\n    address,\n  );\n\n  let data;\n  try {\n    data = await Contract.methods.getData(key).call();\n  } catch (err: any) {\n    console.log(err.message);\n  }\n\n  return data;\n};\n\nexport const checkInterface = async (address: string, web3: Web3) => {\n  const Contract = new web3.eth.Contract(\n    [\n      {\n        type: 'function',\n        stateMutability: 'view',\n        outputs: [\n          {\n            type: 'bool',\n            name: '',\n            internalType: 'bool',\n          },\n        ],\n        name: 'supportsInterface',\n        inputs: [\n          {\n            type: 'bytes4',\n            name: 'interfaceId',\n            internalType: 'bytes4',\n          },\n        ],\n      },\n    ],\n    address,\n  );\n\n  let isErc725X = false;\n  try {\n    isErc725X = await Contract.methods.supportsInterface('0x44c028fe').call();\n  } catch (err: any) {\n    console.log(err.message);\n  }\n\n  let isErc725Y = false;\n  try {\n    isErc725Y = await Contract.methods.supportsInterface('0x2bd57b73').call();\n  } catch (err: any) {\n    console.log(err.message);\n  }\n\n  return {\n    isErc725X,\n    isErc725Y,\n  };\n};\n\nexport const getAllDataKeys = async (\n  address: string,\n  web3: Web3,\n): Promise<string[]> => {\n  const Contract = new web3.eth.Contract(\n    [\n      {\n        type: 'function',\n        stateMutability: 'view',\n        outputs: [\n          {\n            type: 'bytes32[]',\n            name: '',\n            internalType: 'bytes32[]',\n          },\n        ],\n        name: 'allDataKeys',\n        inputs: [],\n      },\n    ],\n    address,\n  );\n\n  let allDataKeys = [];\n  try {\n    allDataKeys = await Contract.methods.allDataKeys().call();\n  } catch (err: any) {\n    console.log(err.message);\n  }\n\n  return allDataKeys;\n};\n","import React from 'react';\n\ninterface Props {\n  address: string;\n}\n\nconst AddressButtons: React.FC<Props> = ({ address }) => {\n  return (\n    <div className=\"buttons are-small pt-2\">\n      <a\n        className=\"button is-primary is-light\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        href={`https://universalprofile.cloud/${address}`}\n      >\n        View on UP as Profile 🧑‍🎤\n      </a>\n      <a\n        className=\"button is-info is-light\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        href={`https://universalprofile.cloud/asset/${address}`}\n      >\n        View on UP as Asset 👗\n      </a>\n      <a\n        className=\"button is-link is-light\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        href={`https://blockscout.com/lukso/l14/address/${address}`}\n      >\n        View on Blockscout ⛓\n      </a>\n      <a\n        className=\"button is-link is-light\"\n        href={`${window.location}?address=${address}`}\n      >\n        ERC725 Inspect 🔍\n      </a>\n    </div>\n  );\n};\n\nexport default AddressButtons;\n","import React from 'react';\nimport { ERC725, ERC725JSONSchema } from '@erc725/erc725.js';\nimport { Erc725JsonSchemaAll } from '../../interfaces/erc725';\nimport AddressButtons from '../AddressButtons';\n\ninterface Props {\n  erc725JSONSchema: ERC725JSONSchema | Erc725JsonSchemaAll;\n  value: string;\n}\n\nconst ValueTypeDecoder: React.FC<Props> = ({ erc725JSONSchema, value }) => {\n  if (erc725JSONSchema.valueContent === 'Address') {\n    return (\n      <>\n        <code>{value}</code>\n        <AddressButtons address={value} />\n      </>\n    );\n  }\n\n  // The schema may be wrong, this error will be catched bellow\n  // @ts-ignore\n  const schema: ERC725JSONSchema[] = [erc725JSONSchema];\n\n  const erc725 = new ERC725(schema);\n\n  let decodedDataOneKey;\n  try {\n    decodedDataOneKey = erc725.decodeData({\n      [erc725JSONSchema.name]: value,\n    });\n  } catch (err) {\n    // Goes here if key is not in erc725.js yet or if key is undefined\n    return <span>Can't decode this key</span>;\n  }\n\n  console.log(decodedDataOneKey);\n\n  return (\n    <div>\n      <pre>{JSON.stringify(decodedDataOneKey, null, 4)}</pre>\n      {decodedDataOneKey[erc725JSONSchema.name].url && (\n        <span>URL: {decodedDataOneKey[erc725JSONSchema.name].url}</span>\n      )}\n    </div>\n  );\n};\n\nexport default ValueTypeDecoder;\n","import React, { useEffect, useState } from 'react';\n\nimport useWeb3 from '../../hooks/useWeb3';\nimport { getAllDataKeys, getDataMultiple } from '../../utils/web3';\nimport { explainErc725YKey } from '../../utils/erc725y';\nimport AddressButtons from '../AddressButtons';\nimport ValueTypeDecoder from '../ValueTypeDecoder';\n\ninterface Props {\n  address: string;\n  isErc725Y: boolean;\n}\n\nconst DataKeysTable: React.FC<Props> = ({ address, isErc725Y }) => {\n  const [data, setData] = useState<{ key: string; value: string }[]>([]);\n\n  const web3 = useWeb3();\n\n  useEffect(() => {\n    const fetch = async () => {\n      if (!web3 || !isErc725Y) {\n        return;\n      }\n\n      try {\n        const fetchedDataKeys = await getAllDataKeys(address, web3);\n        const fetchedDataValues = await getDataMultiple(\n          address,\n          fetchedDataKeys,\n          web3,\n        );\n\n        setData(\n          fetchedDataKeys.map((fetchedDataKey, i) => {\n            return {\n              key: fetchedDataKey,\n              value: fetchedDataValues[i],\n            };\n          }),\n        );\n      } catch (err) {\n        setData([]);\n      }\n    };\n\n    fetch();\n  }, [address, web3, isErc725Y]);\n\n  if (!isErc725Y) {\n    return null;\n  }\n\n  return (\n    <div className=\"columns is-multiline\">\n      {data.map((data) => {\n        const keyInfo = explainErc725YKey(data.key);\n\n        return (\n          <div className=\"column is-half\">\n            <div key={data.key} className=\"content py-5\">\n              <h4 className=\"title is-4\">\n                {keyInfo.name}{' '}\n                <span className=\"tag is-link is-light\">{keyInfo.keyType}</span>\n              </h4>\n              <ul>\n                <li>\n                  Key: <code>{keyInfo.key}</code>\n                </li>\n                <li>\n                  Raw value{' '}\n                  <span className=\"tag is-link is-light\">\n                    {keyInfo.valueType}\n                  </span>\n                  : <code>{data.value}</code>\n                </li>\n                <li>\n                  Decoded value{' '}\n                  <span className=\"tag is-link is-light\">\n                    {keyInfo.valueContent}\n                  </span>\n                  :{' '}\n                  <ValueTypeDecoder\n                    erc725JSONSchema={keyInfo}\n                    value={data.value}\n                  />\n                </li>\n                {keyInfo.keyType === 'AddressMappingWithGrouping' && (\n                  <li>\n                    Mapped address:{' '}\n                    <code>0x{keyInfo.name.split(':').pop()}</code>{' '}\n                    <AddressButtons\n                      address={`0x${keyInfo.name.split(':').pop()}`}\n                    />\n                  </li>\n                )}\n              </ul>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default DataKeysTable;\n","import { ERC725JSONSchema } from '@erc725/erc725.js';\nimport { Erc725JsonSchemaAll } from '../interfaces/erc725';\n\nexport const explainErc725YKey = (\n  key: string,\n): ERC725JSONSchema | Erc725JsonSchemaAll => {\n  switch (key) {\n    // LSP4\n    case '0xeafec4d89fa9619884b6b89135626455000000000000000000000000abf0613c': {\n      return {\n        name: 'SupportedStandards:LSP4DigitalCertificate',\n        key: '0xeafec4d89fa9619884b6b89135626455000000000000000000000000abf0613c',\n        keyType: 'Mapping',\n        valueContent: '0xabf0613c',\n        valueType: 'bytes',\n      };\n    }\n    case '0x9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e': {\n      return {\n        name: 'LSP4Metadata',\n        key: '0x9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e',\n        keyType: 'Singleton',\n        valueContent: 'JSONURL',\n        valueType: 'bytes',\n      };\n    }\n    case '0x114bd03b3a46d48759680d81ebb2b414fda7d030a7105a851867accf1c2352e7': {\n      return {\n        name: 'LSP4Creators[]',\n        key: '0x114bd03b3a46d48759680d81ebb2b414fda7d030a7105a851867accf1c2352e7',\n        keyType: 'Array',\n        valueContent: 'Number',\n        valueType: 'uint256',\n        elementValueContent: 'Address',\n        elementValueType: 'address',\n      };\n    }\n    // LSP3\n    case '0xeafec4d89fa9619884b6b89135626455000000000000000000000000abe425d6':\n      return {\n        name: 'SupportedStandards:LSP3UniversalProfile',\n        key: '0xeafec4d89fa9619884b6b89135626455000000000000000000000000abe425d6',\n        keyType: 'Mapping',\n        valueContent: '0xabe425d6',\n        valueType: 'bytes',\n      };\n\n    case '0x3a47ab5bd3a594c3a8995f8fa58d0876c96819ca4516bd76100c92462f2f9dc0':\n      return {\n        name: 'LSP3IssuedAssets[]',\n        key: '0x3a47ab5bd3a594c3a8995f8fa58d0876c96819ca4516bd76100c92462f2f9dc0',\n        keyType: 'Array',\n        valueContent: 'Address',\n        valueType: 'address',\n      };\n    case '0xeafec4d89fa9619884b6b89135626455000000000000000000000000afdeb5d6':\n      return {\n        name: 'SupportedStandards:ERC725Account',\n        key: '0xeafec4d89fa9619884b6b89135626455000000000000000000000000afdeb5d6',\n        keyType: 'Singleton',\n        valueContent: '0xafdeb5d6',\n        valueType: 'bytes',\n      };\n    case '0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47':\n      return {\n        name: 'LSP1UniversalReceiverDelegate',\n        key: '0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47',\n        keyType: 'Singleton',\n        valueContent: 'Address',\n        valueType: 'address',\n      };\n    case '0x5ef83ad9559033e6e941db7d7c495acdce616347d28e90c7ce47cbfcfcad3bc5':\n      return {\n        name: 'LSP3Profile',\n        key: '0x5ef83ad9559033e6e941db7d7c495acdce616347d28e90c7ce47cbfcfcad3bc5',\n        keyType: 'Singleton',\n        valueContent: 'JSONURL',\n        valueType: 'bytes',\n      };\n    case '0xdf30dba06db6a30e65354d9a64c609861f089545ca58c6b4dbe31a5f338cb0e3':\n      return {\n        name: 'AddressPermissions[]',\n        key: '0xdf30dba06db6a30e65354d9a64c609861f089545ca58c6b4dbe31a5f338cb0e3',\n        keyType: 'Array',\n        valueContent: 'Address',\n        valueType: 'address',\n      };\n    default:\n      break;\n  }\n\n  // If it is not a known key, let's try to decode it\n\n  if (\n    key.indexOf(\n      '0xeafec4d89fa9619884b6b89135626455000000000000000000000000',\n    ) !== -1\n  ) {\n    return {\n      name: 'SupportedStandards:?????????',\n      key,\n      keyType: 'Mapping',\n      valueContent: key.substr(58),\n      valueType: 'bytes',\n    };\n  }\n\n  // LSP6 - https://github.com/lukso-network/LIPs/blob/7e3f5db43330c5c8d2643ccba32f896461db7381/LSPs/LSP-6-KeyManager.md#permission-keys-on-the-erc725account\n  if (key.indexOf('0x4b80742d0000000082ac0000') !== -1) {\n    const address = key.substr(26);\n\n    return {\n      name: `AddressPermissions:Permissions:${address}`,\n      key,\n      keyType: 'AddressMappingWithGrouping',\n      valueContent: 'BitArray',\n      valueType: 'bytes4',\n    };\n  }\n  if (key.indexOf('0x4b80742d00000000c6dd0000') !== -1) {\n    const address = key.substr(26);\n\n    return {\n      name: `AddressPermissions:AllowedAddresses:${address}`,\n      key,\n      keyType: 'AddressMappingWithGrouping',\n      valueContent: 'Address',\n      valueType: 'address[]',\n    };\n  }\n  if (key.indexOf('0x4b80742d000000008efe0000') !== -1) {\n    const address = key.substr(26);\n\n    return {\n      name: `AddressPermissions:AllowedFunctions:${address}`,\n      key,\n      keyType: 'AddressMappingWithGrouping',\n      valueContent: 'Bytes4',\n      valueType: 'bytes4[]',\n    };\n  }\n  if (key.indexOf('0x4b80742d000000003efa0000') !== -1) {\n    const address = key.substr(26);\n\n    return {\n      name: `AddressPermissions:AllowedStandards:${address}`,\n      key,\n      keyType: 'AddressMappingWithGrouping',\n      valueContent: 'Bytes4',\n      valueType: 'bytes4[]',\n    };\n  }\n\n  if (key.indexOf('0x114bd03b3a46d48759680d81ebb2b414') !== -1) {\n    const itemNumber = parseInt(key.substr(34), 10);\n\n    return {\n      name: `LSP4Creators[${itemNumber}]`,\n      key: key,\n      keyType: 'Singleton',\n      valueContent: 'Address',\n      valueType: 'address',\n    };\n  }\n\n  if (key.indexOf('0x3a47ab5bd3a594c3a8995f8fa58d0876') !== -1) {\n    const itemNumber = parseInt(key.substr(34), 10);\n\n    return {\n      name: `LSP3IssuedAssets[${itemNumber}]`,\n      key: key,\n      keyType: 'Singleton',\n      valueContent: 'Address',\n      valueType: 'address',\n    };\n  }\n\n  return {\n    name: 'UNKNOWN',\n    key,\n    keyType: 'UNKNOWN',\n    valueContent: 'UNKNOWN',\n    valueType: 'UNKNOWN',\n  };\n\n  /*\n    Singleton: A simple key.\nArray: An array spanning multiple ERC725Y keys.\nMapping: A key that maps two words.\nAddressMapping: A key that maps a word to an address.\nAddressMappingWithGrouping\n\n*/\n};\n","import React from 'react';\n\nconst Header: React.FC = () => {\n  return (\n    <nav className=\"navbar is-light\">\n      <div className=\"navbar-menu is-active\">\n        <div className=\"navbar-start\">\n          <a className=\"navbar-item\" href=\"/\">\n            ERC725 Inspect 📝🔍\n          </a>\n        </div>\n\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              <a\n                href=\"https://github.com/lukso-network/LIPs/tree/master/LSPs\"\n                className=\"button is-light\"\n              >\n                LUKSO LIP\n              </a>\n            </div>\n          </div>\n\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              <a\n                href=\"https://docs.lukso.tech/networks/l14-testnet\"\n                className=\"button is-light\"\n              >\n                Network: LUKSO L14\n              </a>\n            </div>\n          </div>\n\n          <div className=\"navbar-item\">\n            <div className=\"field is-grouped\">\n              <p className=\"control\">\n                <a\n                  className=\"button is-primary\"\n                  href=\"https://github.com/Hugoo/erc725-inspect/\"\n                >\n                  <span>GitHub</span>\n                </a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport { isAddress } from 'web3-utils';\nimport { useLocation } from 'react-router-dom';\n\nimport './App.css';\nimport useWeb3 from './hooks/useWeb3';\nimport { checkInterface } from './utils/web3';\n\nimport DataKeysTable from './components/DataKeysTable';\nimport Header from './components/Header';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst Home = () => {\n  const query = useQuery();\n\n  const [address, setAddress] = useState(\n    query.get('address') || '0xb8E120e7e5EAe7bfA629Db5CEFfA69C834F74e99',\n  );\n  const [isLoading, setIsLoading] = useState(false);\n  const [isErc725X, setIsErc725X] = useState(false);\n  const [isErc725Y, setIsErc725Y] = useState(false);\n  const [shareButtonTitle, setShareButtonTitle] = useState('Copy share link');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const web3 = useWeb3();\n\n  useEffect(() => {\n    const check = async () => {\n      if (!web3) {\n        return;\n      }\n\n      setIsErc725X(false);\n      setIsErc725Y(false);\n      setErrorMessage('');\n\n      if (!isAddress(address)) {\n        setErrorMessage('Address is not valid');\n        return;\n      }\n\n      setIsLoading(true);\n      const supportStandards = await checkInterface(address, web3);\n\n      setIsErc725X(supportStandards.isErc725X);\n      setIsErc725Y(supportStandards.isErc725Y);\n      setIsLoading(false);\n    };\n    check();\n  }, [address, web3]);\n\n  return (\n    <>\n      <Header />\n      <section className=\"section\">\n        <div className=\"container is-fluid\">\n          <div className=\"columns is-vcentered\">\n            <div className=\"column is-offset-one-quarter is-half has-text-centered\">\n              <div className=\"field\">\n                <div className={`control ${isLoading && 'is-loading'}`}>\n                  <input\n                    className={`input is-rounded has-text-centered is-medium ${\n                      errorMessage === '' && (isErc725X || isErc725Y)\n                        ? 'is-success'\n                        : 'is-danger'\n                    }`}\n                    type=\"text\"\n                    placeholder=\"ERC725 Contract Address\"\n                    value={address}\n                    onChange={(e) => {\n                      setAddress(e.target.value);\n                    }}\n                  />\n                </div>\n                {errorMessage && (\n                  <p className=\"help is-danger\">{errorMessage}</p>\n                )}\n                {!errorMessage && !isErc725X && !isErc725Y && (\n                  <p className=\"help is-danger\">ERC725X: ❌ - ERC725Y: ❌</p>\n                )}\n\n                {(isErc725X || isErc725Y) && (\n                  <p className=\"help is-success\">\n                    ERC725X: {isErc725X ? '✅' : '❌'} - ERC725Y:{' '}\n                    {isErc725Y ? '✅' : '❌'}\n                  </p>\n                )}\n              </div>\n              <div className=\"field\">\n                <p className=\"control\">\n                  <button\n                    disabled={!!errorMessage}\n                    className=\"button is-success\"\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `${window.location}?address=${address}`,\n                      );\n                      setShareButtonTitle('Address copied in clipboard');\n                    }}\n                  >\n                    {shareButtonTitle}\n                  </button>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container is-fluid\">\n          {!isLoading && (\n            <DataKeysTable address={address} isErc725Y={isErc725Y} />\n          )}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Home;\n","import { BrowserRouter as Router } from 'react-router-dom';\n\nimport Home from './Home';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Router>\n      <Home />\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}